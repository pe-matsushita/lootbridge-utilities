/* Autogenerated file. Do not edit manually. */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers';
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from '@ethersproject/contracts';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';

interface IWBNBGatewayInterface extends ethers.utils.Interface {
  functions: {
    'borrowBNB(address,uint256,uint256,uint16)': FunctionFragment;
    'depositBNB(address,address,uint16)': FunctionFragment;
    'repayBNB(address,uint256,uint256,address)': FunctionFragment;
    'withdrawBNB(address,uint256,address)': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'borrowBNB',
    values: [string, BigNumberish, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'depositBNB',
    values: [string, string, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'repayBNB',
    values: [string, BigNumberish, BigNumberish, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'withdrawBNB',
    values: [string, BigNumberish, string],
  ): string;

  decodeFunctionResult(functionFragment: 'borrowBNB', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'depositBNB', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'repayBNB', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'withdrawBNB',
    data: BytesLike,
  ): Result;

  events: {};
}

export class IWBNBGateway extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IWBNBGatewayInterface;

  functions: {
    borrowBNB(
      lendingPool: string,
      amount: BigNumberish,
      interesRateMode: BigNumberish,
      referralCode: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'borrowBNB(address,uint256,uint256,uint16)'(
      lendingPool: string,
      amount: BigNumberish,
      interesRateMode: BigNumberish,
      referralCode: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    depositBNB(
      lendingPool: string,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides,
    ): Promise<ContractTransaction>;

    'depositBNB(address,address,uint16)'(
      lendingPool: string,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides,
    ): Promise<ContractTransaction>;

    repayBNB(
      lendingPool: string,
      amount: BigNumberish,
      rateMode: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides,
    ): Promise<ContractTransaction>;

    'repayBNB(address,uint256,uint256,address)'(
      lendingPool: string,
      amount: BigNumberish,
      rateMode: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides,
    ): Promise<ContractTransaction>;

    withdrawBNB(
      lendingPool: string,
      amount: BigNumberish,
      onBehalfOf: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'withdrawBNB(address,uint256,address)'(
      lendingPool: string,
      amount: BigNumberish,
      onBehalfOf: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;
  };

  borrowBNB(
    lendingPool: string,
    amount: BigNumberish,
    interesRateMode: BigNumberish,
    referralCode: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'borrowBNB(address,uint256,uint256,uint16)'(
    lendingPool: string,
    amount: BigNumberish,
    interesRateMode: BigNumberish,
    referralCode: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  depositBNB(
    lendingPool: string,
    onBehalfOf: string,
    referralCode: BigNumberish,
    overrides?: PayableOverrides,
  ): Promise<ContractTransaction>;

  'depositBNB(address,address,uint16)'(
    lendingPool: string,
    onBehalfOf: string,
    referralCode: BigNumberish,
    overrides?: PayableOverrides,
  ): Promise<ContractTransaction>;

  repayBNB(
    lendingPool: string,
    amount: BigNumberish,
    rateMode: BigNumberish,
    onBehalfOf: string,
    overrides?: PayableOverrides,
  ): Promise<ContractTransaction>;

  'repayBNB(address,uint256,uint256,address)'(
    lendingPool: string,
    amount: BigNumberish,
    rateMode: BigNumberish,
    onBehalfOf: string,
    overrides?: PayableOverrides,
  ): Promise<ContractTransaction>;

  withdrawBNB(
    lendingPool: string,
    amount: BigNumberish,
    onBehalfOf: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'withdrawBNB(address,uint256,address)'(
    lendingPool: string,
    amount: BigNumberish,
    onBehalfOf: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  callStatic: {
    borrowBNB(
      lendingPool: string,
      amount: BigNumberish,
      interesRateMode: BigNumberish,
      referralCode: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'borrowBNB(address,uint256,uint256,uint16)'(
      lendingPool: string,
      amount: BigNumberish,
      interesRateMode: BigNumberish,
      referralCode: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    depositBNB(
      lendingPool: string,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'depositBNB(address,address,uint16)'(
      lendingPool: string,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    repayBNB(
      lendingPool: string,
      amount: BigNumberish,
      rateMode: BigNumberish,
      onBehalfOf: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'repayBNB(address,uint256,uint256,address)'(
      lendingPool: string,
      amount: BigNumberish,
      rateMode: BigNumberish,
      onBehalfOf: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    withdrawBNB(
      lendingPool: string,
      amount: BigNumberish,
      onBehalfOf: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'withdrawBNB(address,uint256,address)'(
      lendingPool: string,
      amount: BigNumberish,
      onBehalfOf: string,
      overrides?: CallOverrides,
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    borrowBNB(
      lendingPool: string,
      amount: BigNumberish,
      interesRateMode: BigNumberish,
      referralCode: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'borrowBNB(address,uint256,uint256,uint16)'(
      lendingPool: string,
      amount: BigNumberish,
      interesRateMode: BigNumberish,
      referralCode: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    depositBNB(
      lendingPool: string,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides,
    ): Promise<BigNumber>;

    'depositBNB(address,address,uint16)'(
      lendingPool: string,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides,
    ): Promise<BigNumber>;

    repayBNB(
      lendingPool: string,
      amount: BigNumberish,
      rateMode: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides,
    ): Promise<BigNumber>;

    'repayBNB(address,uint256,uint256,address)'(
      lendingPool: string,
      amount: BigNumberish,
      rateMode: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides,
    ): Promise<BigNumber>;

    withdrawBNB(
      lendingPool: string,
      amount: BigNumberish,
      onBehalfOf: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'withdrawBNB(address,uint256,address)'(
      lendingPool: string,
      amount: BigNumberish,
      onBehalfOf: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    borrowBNB(
      lendingPool: string,
      amount: BigNumberish,
      interesRateMode: BigNumberish,
      referralCode: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'borrowBNB(address,uint256,uint256,uint16)'(
      lendingPool: string,
      amount: BigNumberish,
      interesRateMode: BigNumberish,
      referralCode: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    depositBNB(
      lendingPool: string,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides,
    ): Promise<PopulatedTransaction>;

    'depositBNB(address,address,uint16)'(
      lendingPool: string,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides,
    ): Promise<PopulatedTransaction>;

    repayBNB(
      lendingPool: string,
      amount: BigNumberish,
      rateMode: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides,
    ): Promise<PopulatedTransaction>;

    'repayBNB(address,uint256,uint256,address)'(
      lendingPool: string,
      amount: BigNumberish,
      rateMode: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides,
    ): Promise<PopulatedTransaction>;

    withdrawBNB(
      lendingPool: string,
      amount: BigNumberish,
      onBehalfOf: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'withdrawBNB(address,uint256,address)'(
      lendingPool: string,
      amount: BigNumberish,
      onBehalfOf: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;
  };
}
